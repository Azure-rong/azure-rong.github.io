<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Windows 系统使用 Hexo 搭建博客记录（四）：博客写作]]></title>
    <url>%2F2019%2F03%2F30%2FWindows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[这是 Windows 系统使用 Hexo 搭建博客系列文章： 配置本地环境； 连接网络； 博客配置和主题配置； 博客写作； 这是第四篇：博客写作。 1. 写文章和发布进入到 Hexo 所在的文件夹，然后输入：hexo new &quot;BlogTitle&quot;，就会在 /source/_post 里面生成一个 BlogTitle.md 的文件。这个就是新博文的内容。对这个文件用喜欢的 Markdown 编辑器编辑即可。 2. Font-matter（博文声明区）每篇博文都会有一个声明区（前置区），一般标题和时间是通过 hexo new 自动生成的，我们需要在声明区中声明文章的更新时间、标签、类别等信息，如下：123456789---title: XXXXXXdate: 2019-03-28 16:46:36update: 2019-03-29 16:46:36tags: - tag1 - tag2categories: cat_A--- 注意：Hexo 中的 categories 是每篇文章只能设置一个的，而 tags 可以设置多个。 3. 文中插入图片3.1 本地上传的方法 下载本地上传图片的插件：npm install hexo-asset-image --save； 把主配置文件中的 post_asset_folder 设为 true； 总是通过 hexo new &quot;Blog Title&quot; 来生成博客，此时 _post 文件夹中会生成一个和博文题目相同名称的文件夹； 把图片放入该文件夹中，然后写作时通过引用文件夹中的图片：![pic_name](blog_title/pic_name.jpg) 这种相对路径来引用。 3.2 网络图床的方法上述方法存在一个问题，就是换电脑的话或者数据丢失的话，图片数据就会消失。因此另一种方法是使用网络图床。其中可以使用图床上传工具 PicGo 进行图片上传，该工具默认把图片传到 SM 图床，上传完毕后会回传图片的 url，在 markdown 写作时直接引用 url 即可。更好的方法是用 Github 作为图床，因为 Github 是默许用户进行这样的使用的，其它如使用微博、简书等作为图床就有风险。用 Github 作图床需要新建一个 Github 仓库，专门用于存放图片。新建仓库后，在仓库中新建应用授权 key，然后把 key 值写入 PicGo 中即可用 PicGo 上传图片到 Github 中，具体操作参考如下两篇： PicGo+GitHub图床，让Markdown飞 PicGo 配置 Github 图床 4. 特殊设置 阅读全文设置：在文章中用 &lt;!-- more --&gt; 进行手动截断。 引用文本时居中显示：blah blah blah ； 突破容器限制显示图片： ； 插入指定大小的图片：； 更漂亮的引用方法 123&#123;% blockquote Author, Source %&#125;Content.&#123;% endblockquote %&#125; 更好的代码块加入方法 123&#123;% codeblock lang:python %&#125;print &quot;Hello World!&quot;&#123;% endcodeblock %&#125; 插入 Gist： 5. 设置字体大小和颜色如果想自定义字体大小以及颜色，可以直接在 Markdown 文档中使用 html 语法：12345&lt;font size=4 &gt; 这里输入文字，自定义字体大小 &lt;/font&gt;&lt;font color=&quot;#FF0000&quot;&gt; 这里输入文字，自定义字体颜色&lt;/font&gt; &lt;span style=&quot;background-color: #ff6600;&quot;&gt;这里输入文字，自定义字体背景色&lt;/span&gt;&lt;font color=&quot;#000000&quot; size=4&gt;&lt;span style=&quot;background-color: #ADFF2F;&quot;&gt;这是综合起来的效果 &lt;/span&gt;&lt;/font&gt;&lt;font color=&quot;#FFFFFF&quot; size=4&gt;&lt;span style=&quot;background-color: #68228B;&quot;&gt;这是综合起来的效果2 &lt;/span&gt;&lt;/font&gt; 其中#FF0000为RGB颜色代码，读者可去RGB颜色查询对照表网站查找自己喜欢的颜色。若想在RGB颜色值与十六进制颜色码之间相互转化，可查看该网站。 6. 首行缩进在需要缩进行的开头处，先输入下面的代码，然后紧跟着输入文本即可。分号也不要漏掉。123半方大的空白`&amp;ensp;`或`&amp;#8194`;全方大的空白`&amp;emsp;`或`&amp;#8195`;不断行的空白格`&amp;nbsp;`或`&amp;#160`; 7. 设置博文中的链接为蓝色由于 NexT 渲染出来的博文的网络链接都是白色的，可以改为蓝色。可以去 \themes\next\source\css\_common\components\post\post.styl，添加字段：12345678.post-body p a&#123; color: #0593d3; border-bottom: none; &amp;:hover &#123; color: #0477ab; text-decoration: underline; &#125; &#125;]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 系统使用 Hexo 搭建博客记录（三）：博客配置和主题配置]]></title>
    <url>%2F2019%2F03%2F30%2FWindows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE%2F</url>
    <content type="text"><![CDATA[这是 Windows 系统使用 Hexo 搭建博客系列文章： 配置本地环境； 连接网络； 博客配置和主题配置； 博客写作； 这是第三篇：博客配置和主题配置。 1. 博客配置和写作1.1 修改博客名称在 /blog/_config.yml 中的 #Site 修改： title subtitle description language: zh-CN timezone 注意：若使用 NexT 主题，language 的简体中文必须设置为 zh-CN 1.2 生成 Category, Tags, About 页面 输入：123hexo new page tagshexo new page categorieshexo new page about 然后在 source 文件夹下会出现 tags, categories, about 文件夹，分别在里面的 index 文件加入语句：123type: &quot;tags&quot;type: &quot;categories&quot;type: &quot;about&quot; 在 about 文件夹里面的 index.md 写个人的简介。 1.3 添加搜索和 RSS Feed注意，必须首先安装了 Hexo 的 feed 和 searchdb 插件，在 /blog/_config.yml 中添加如下代码：123456789101112search: path: search.xml field: post format: html limit: 10000feed: type: rss2 path: rss2.xml limit: 10 hub: content: &apos;true&apos; 注意，search 还必须在 NexT 主题配置文件中把 local_search 设为 true. 1.4 为项目主页添加 README 文件每次 Hexo 重新部署的时候项目主页的 README 文件都会被删除。因此用如下方法： 在 \blog\source 文件夹内新建文件 README.mdown； 在这个 README.mdown 里面写 readme 的内容。 2. NexT 主题配置主要使用和参考了： NexT 文档 NexT Github Hexo搭建的GitHub博客之优化大全 2.1 基础设置首先修改主题：在博客配置文件 /blog/_config.yml 里面修改主题为：theme: next；接下来操作都在主题配置文件 /blog/themes/next/_config.yml 中进行。 网页设置 网站小图标（# Site Information Settings）：把图标的 png 文件放在 themes/next/source/images/ 文件夹里面，把文件夹的链接加到 favicon: 中即可。我只设置了 small, medium 两个； 设 creative_commons: 的 post: true，在文末添加版权声明； 网页底部 footnote 暂不作设置。 设置导航栏（# Menu Settings）：添加 about, tags 和 categories； 设置模板（ # Scheme Settings）：可选择喜欢的样式，我采用了 Gemini； 设置侧边栏（# Sidebar Settings），我的修改如下： 设置社交账号链接（social）：设置了 Github，知乎，豆瓣和邮箱四个； 设置 back2top 中的值都为 true； 增加头像（avatar）：把头像放在 themes/next/source/images/ 文件夹里面，把文件夹的链接加到 url: 中即可； 修改 toc 设置，把自动添加目录序号设为 number: false； 设置文章（# Post Settings）：可设置文后添加微信订阅、相似文章等，但现暂时不设置； 添加数学公式支持（# Math Equations Render Support） 设置 math 为 enable: true； 卸载原来的 renderer：npm un hexo-renderer-marked --save； 安装可以支持 mathjax 的 renderer：npm install hexo-renderer-pandoc --save； 每次写作，如果需要使用公式（mathjax）时，就在声明区加入声明：mathjax: true 2.2 高级设置 添加评论支持：使用来必力评论系统（LiveRe），先注册。然后点击安装，选择免费版，填入网站链接和名称，获得代码，找到 uid。最后在主题配置文件中找到 livere_uid: 并加入即可； 添加阅读次数统计功能：使用 Leecloud，用 Github 账号注册之后，创建新应用（自定应用名）→ 进入应用，创建 class，名字为 Counter → 设置，应用 key → 复制 App ID 和 App Key → 修改主题配置文件中的 leancloud_visitors。最后需要安装插件 npm install hexo-leancloud-counter-security --save； 添加顶部加载进度条：进入 \themes\next 文件夹，输入：git clone https://github.com/theme-next/theme-next-pace source/lib/pace 下载插件。在主题配置文件中把 pace 设为 true 即可； 添加背景动态效果：主题配置文件定位到 # Canvas-nest，看情况是否需要。并且要安装插件； 修改文章底部的 # 号标签修改模板 /themes/next/layout/_macro/post.swig，搜索 rel=&quot;tag&quot;&gt;#，将其中的 # 换成 &lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 系统使用 Hexo 搭建博客记录（二）：连接网络]]></title>
    <url>%2F2019%2F03%2F30%2FWindows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C%2F</url>
    <content type="text"><![CDATA[这是 Windows 系统使用 Hexo 搭建博客系列文章： 配置本地环境； 连接网络； 博客配置和主题配置； 博客写作； 这是第二篇：连接网络。 1. 使用 Github Pages 并确定域名在 Github 上新建一个项目（repository），新项目（Create a New Repository）必须填：username.github.io，才能生成 Github Pages。 2. 本地生成密钥要把本地的博文通过 Github Pages 发布到网上，就必须使用密钥进行本地和网络的连接。此时，就要保证本地和 Github 的密钥是一致的。因此这一步就是在本地生成密钥，并在下一步将密钥粘贴到 Github 中。 创建 ssh key输入：ssh-keygen -t rsa -C &quot;email&quot;，然后一直回车即可（不输入密码 passphrase）。 复制 ssh key输入：clip &lt; ~/.ssh/id_rsa.pub 即可。 粘贴到 Github - Settings - SSH and GPG keys 的 SSH 中，然后 Nes SSH Key 即可，完成后如下： 3. 测试连接并修改博客配置 测试连接是否成功输入：ssh -T git@github.com，然后必须要输入 yes，然后继续即可。 设置用户名和密码 git config --global user.name &quot;NAME&quot; git config --global user.email &quot;MAIL&quot; 修改 -config.yml 的内容把 deploy 的内容修改成下面这样（前提是已经安装了）： 4. 发布博客输入：12hexo generatehexo deploy 或者简单的：hexo g -d 即可。完成后在浏览器输入网址：http://azure-rong.github.io/ 查看结果。]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows 系统使用 Hexo 搭建博客记录（一）：配置本地环境]]></title>
    <url>%2F2019%2F03%2F29%2FWindows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83%2F</url>
    <content type="text"><![CDATA[这是 Windows 系统使用 Hexo 搭建博客系列文章： 配置本地环境； 连接网络； 博客配置和主题配置； 博客写作； 这是第一篇：配置本地环境。 1. 下载 Node.js 和 Git（Cmder）使用 Hexo 前必须有 Node.js 和 Git 的支持。原因是：配置本地环境就是要有搭建网页（前端）工具：Node.js，以便之后使用专门的博客工具（Hexo，Jekyll 等）来进行网页生成。而又由于 Windows 对 Node.js 的支持并不好，因此还需要下载 Git 来进行操作。而又因为 Windows 下对 Git 的支持也不好，因此需要下载 msysgit。正好 Windows 下的原生 Cmd 并不好用，因此可以下载完整版的 Cmder 1，里面自带了 msysgit，并且界面非常漂亮。因此此后所有的博客相关操作，包括 Git 的相关操作，都无需再使用很丑的 git-bash，而直接用 Cmder 即可。 1.1 下载 Cmder 完整版 1.2 下载 Node.js 下载 Node.js 的 Windows 安装包。 测试 Node.js 是否成功安装在 Cmder 中输入命令：npm --version，若正常安装即可显示版本信息。 2. 使用和配置 Hexo Hexo 2 事实上是 Node.js 的一个工具，因此安装 Hexo 是全局安装的； 然后要初始化 Hexo，那初始化就是需要指定文件夹的，那这个文件夹就是我们的博客文件夹； 初始化之后，在文件夹中就会有 Hexo 的相关配置文件； 下一步就是要下载 Hexo 的相关插件，来丰富博客的功能； 2.1 安装 Hexo 直接在根目录下即可安装 Hexo（因此 Hexo 事实上是全局的），输入命令：npm install -g hexo-cli 安装之后使用 hexo version 进行检查，若正常输出则安装成功。 2.2 使用 Hexo 建立网站 去到博客所在的文件夹，输入：hexo init blog_directory_path显示 INFO Start blogging with Hexo! 即表示初始化成功。之后在博客文件夹中，会有如下文件/文件夹： _config.yml：网站的配置信息，如网站名等； package.json：网站的插件信息，以下这些插件是默认安装的； scaffolds：存储了文档模板的文件夹，在生成博文时会根据模板默认填充部分信息如标题、日期、标签等，可定制化； source：存储博文的文件夹，博文存储在 _post 文件夹中，在网站生成（部署）的时候，_post 文件夹里面的博文会被放到一个新建的 public 文件夹中； themes：存储主题文件夹，默认主题是 lanpscape。注意，主题文件夹中的 _config.yml 和 package.json 是对主题进行修改配置的文件； 进入博客文件夹，输入：npm install，完成最后的初始化操作。 2.3 安装 Hexo 插件 安装 git 上传插件：npm install hexo-deployer-git --save 安装搜索插件：npm install hexo-generator-searchdb --save 安装 RSS 插件：npm install hexo-generator-feed --save 3. 生成静态网页进行检测输入以下三个语句即可：123hexo new test_page # 在 _post 文件夹中新建一个 md 文件叫 test_pagehexo generate # 把博文的网页生成出来hexo server # 生成静态网页 4. Hexo 升级很可能会出问题，慎用！命令：npm update hexo -g 脚注： 1. Windows上的程序员神器——Cmder &#8617; 2. Hexo 文档 &#8617;]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>软件</tag>
        <tag>配置</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[思考的感性与理性]]></title>
    <url>%2F2019%2F03%2F29%2F%E6%80%9D%E8%80%83%E7%9A%84%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7%2F</url>
    <content type="text"><![CDATA[这段时间从刘未鹏老师的《暗时间》、采铜老师的《精进》、以及波西格的《禅与摩托车维修艺术》里面，吸收了一些内容。非常的有趣。 《暗时间》的美妙之处是元思考，也就是思考人是怎么思考的。听起来很绕口。其实就是刘未鹏老师对人类的记忆、思考过程等心理学内容，以及人类是如何解决问题的。我印象最深的是几个点， 一个是时刻装着要思考的问题，然后等它一直酝酿，突然之间问题可能就会豁然开朗。这个就是所谓的“暗时间”。你的潜意识非常强大而且一刻不停，在你睡觉吃饭洗澡的时候，如果你的大脑里面装着一个问题，你的潜意识就会帮你一直思考，在灵感忽至的时候，问题就得到了解决并被送往显性的意识里面。然后你就可以像阿基米德解决皇冠体积问题的时候大喊一声：Eureka! 一个是遇见25万年前的自己。人的欲望都倾向于获得食物和热量，要去和多个异性交配以保存基因。而在现代社会，人其实已经不需要这样保命了。人的理性思考就是这几十万年的进化产物，然而却经常败给原始的欲望，败给25万年前的自己。所以，要学会控制，学着进化。 最后一个是关于解题。解题虽然有很多套路，但还是要多点真诚（大雾）。其实关键是在于，一些问题如果想不到关键点，那就是想不到。好问题就会有良好的结构，会引导你到这个关键点。但要到达这个关键点，还是得靠第一点提到的，潜意识。这就是神奇的地方。人的理性思考，最后竟然要靠灵感！ 这在波西格的《禅与摩托车维修艺术》里面也有阐述。里面引用了爱因斯坦的名言： 人类用最适合自己的方式，描绘了一幅最简洁、最容易了解的世界图像。然后试着用经验取代某种层次的世界，然后征服它……他创造了这个宇宙和他感情生活的支柱，这样才能由中找到安宁，而这安宁是无法从个人狭窄的经验当中获得的……最崇高的工作……就是要建立这些宇宙基本的法则，这些法则经过演绎就能创造出现今的世界。而要通往这些法则没有合乎逻辑的路；只有靠着直觉和对经验的体谅才能进入其中…… 波西格惊呼：“直觉？体谅？用来形容科学的源头是很奇怪的字眼。” 没错，我们理性构建的大厦，它的地基，竟然是直觉，和体谅！ 采铜老师的《精进》，也是元思考的好书。我印象最深的是两个。 一个是要多写知识半衰期比较长的东西。这才是保持思考不钝化的关键因素。 一个是要先完成思考的最关键部分。采铜老师把知识比喻为三明治，中间夹着的那些肉和菜是最重要的，而外面的两层面包非常容易就能准备好。所以我们思考就像做三明治一样，先把最关键的肉和菜准备好，把这部分解决之后，剩下的就是琐碎工作，却能非常愉快的完成。 最后是我逛知乎时看到的很喜欢的一句话，是评述那些看了知乎的东西就有知识优越感的人，来自Lawrence Li： 關鍵在於妳生產了什麼，而不是消費了什麼。 所以，无论书评做得如何，都只是消费而已。真正融入内化到自己的思考里面，改变自己的思维方式，最后体现在写作和言谈之中，才是产出。 多产出，少消费。与诸君共勉。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
        <tag>书评</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[关于这个博客]]></title>
    <url>%2F2019%2F03%2F29%2F%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[拥有一个自己博客的念头一开始并不十分强烈，但后来却越发明晰。有很多想法，学习的体会，观察的结果，都需要一个专有的地方放置。另一方面，也是受到刘未鹏老师在《暗时间》里面对博客讲解的启发。 很多时候，问题并不是想清楚的，而是写着写着想清楚的。更多时候是写下来之后改着改着改清楚的。 《暗时间》里面展示了思考是如何成型为一篇文章的。事实上，这个做研究非常相似：心中有个想法，找资料，汇总资料并分析，持续深入的思考，重复以上三步，最后整合成有逻辑的文章。 作为一个博士生，应该贯彻上述思路，一步步写出好的文章。这个博客会聊到关于研究的点滴内容，会有对电子商务世界的观察和思考，在方法会有对数据科学的结构化阐述，在技术上会整理出各种数据分析技术的简要理解和应用。 对这个博客的期望，是整合自己的知识结构和技能树。把已有的模糊的思考整理成清晰的逻辑结构，然后查漏补缺，把不完整不完善的知识区域补充完。对总体背景和环境，希望在博客里面可以有总结和进一步的思考，集思广益海纳百川。最重要的，还是坚持学习，坚持思考，坚持记录，坚持完善。 学无止境。]]></content>
      <categories>
        <category>随笔</category>
      </categories>
      <tags>
        <tag>随笔</tag>
      </tags>
  </entry>
</search>
