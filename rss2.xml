<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>学 无 止 境</title>
    <link>http://azure-rong.github.io/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>学习和研究的记录，关注数据科学和电子商务。</description>
    <pubDate>Sat, 30 Mar 2019 11:36:19 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Windows 系统使用 Hexo 搭建博客记录（四）：博客写作</title>
      <link>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/</link>
      <guid>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/</guid>
      <pubDate>Sat, 30 Mar 2019 11:31:09 GMT</pubDate>
      <description>
      
        &lt;p&gt;这是 Windows 系统使用 Hexo 搭建博客系列文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置本地环境；&lt;/li&gt;
&lt;li&gt;连接网络；&lt;/li&gt;
&lt;li&gt;博客配置和主题配置；&lt;/li&gt;
&lt;li&gt;博客写作；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是第四篇：博客写作。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>这是 Windows 系统使用 Hexo 搭建博客系列文章：</p><ol><li>配置本地环境；</li><li>连接网络；</li><li>博客配置和主题配置；</li><li>博客写作；</li></ol><p>这是第四篇：博客写作。</p><a id="more"></a><h1 id="1-写文章和发布"><a href="#1-写文章和发布" class="headerlink" title="1. 写文章和发布"></a>1. 写文章和发布</h1><p>进入到 Hexo 所在的文件夹，然后输入：<code>hexo new &quot;BlogTitle&quot;</code>，就会在 <code>/source/_post</code> 里面生成一个 <code>BlogTitle.md</code> 的文件。这个就是新博文的内容。对这个文件用喜欢的 Markdown 编辑器编辑即可。</p><h1 id="2-Font-matter（博文声明区）"><a href="#2-Font-matter（博文声明区）" class="headerlink" title="2. Font-matter（博文声明区）"></a>2. Font-matter（博文声明区）</h1><p>每篇博文都会有一个声明区（前置区），一般标题和时间是通过 <code>hexo new</code> 自动生成的，我们需要在声明区中声明文章的更新时间、标签、类别等信息，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: XXXXXX</span><br><span class="line">date: 2019-03-28 16:46:36</span><br><span class="line">update: 2019-03-29 16:46:36</span><br><span class="line">tags:</span><br><span class="line">    - tag1</span><br><span class="line">    - tag2</span><br><span class="line">categories: cat_A</span><br><span class="line">---</span><br></pre></td></tr></table></figure></p><p>注意：Hexo 中的 categories 是每篇文章只能设置一个的，而 tags 可以设置多个。</p><h1 id="3-文中插入图片"><a href="#3-文中插入图片" class="headerlink" title="3. 文中插入图片"></a>3. 文中插入图片</h1><h2 id="3-1-本地上传的方法"><a href="#3-1-本地上传的方法" class="headerlink" title="3.1 本地上传的方法"></a>3.1 本地上传的方法</h2><ol><li>下载本地上传图片的插件：<code>npm install hexo-asset-image --save</code>；</li><li>把主配置文件中的 <code>post_asset_folder</code> 设为 <code>true</code>；</li><li>总是通过 <code>hexo new &quot;Blog Title&quot;</code> 来生成博客，此时 <code>_post</code> 文件夹中会生成一个和博文题目相同名称的文件夹；</li><li>把图片放入该文件夹中，然后写作时通过引用文件夹中的图片：<code>![pic_name](blog_title/pic_name.jpg)</code> 这种相对路径来引用。</li></ol><h2 id="3-2-网络图床的方法"><a href="#3-2-网络图床的方法" class="headerlink" title="3.2 网络图床的方法"></a>3.2 网络图床的方法</h2><p>上述方法存在一个问题，就是换电脑的话或者数据丢失的话，图片数据就会消失。因此另一种方法是使用网络图床。<br>其中可以使用图床上传工具 PicGo 进行图片上传，该工具默认把图片传到 <a href="https://sm.ms/" target="_blank" rel="noopener">SM 图床</a>，上传完毕后会回传图片的 url，在 markdown 写作时直接引用 url 即可。<br>更好的方法是用 Github 作为图床，因为 Github 是默许用户进行这样的使用的，其它如使用微博、简书等作为图床就有风险。用 Github 作图床需要新建一个 Github 仓库，专门用于存放图片。新建仓库后，在仓库中新建应用授权 key，然后把 key 值写入 PicGo 中即可用 PicGo 上传图片到 Github 中，具体操作参考如下两篇：</p><ul><li><a href="https://juejin.im/entry/5c4ec5aaf265da614420689f" target="_blank" rel="noopener">PicGo+GitHub图床，让Markdown飞</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/config.html#github%E5%9B%BE%E5%BA%8A" target="_blank" rel="noopener">PicGo 配置 Github 图床</a></li></ul><h1 id="4-特殊设置"><a href="#4-特殊设置" class="headerlink" title="4. 特殊设置"></a>4. 特殊设置</h1><ul><li>阅读全文设置：在文章中用 <code>&lt;!-- more --&gt;</code> 进行手动截断。</li><li>引用文本时居中显示：<code><blockquote class="blockquote-center"><p>blah blah blah </p></blockquote></code>；</li><li>突破容器限制显示图片：<code><span itemprop="image" itemscope itemtype="http://schema.org/ImageObject"><img itemprop="url image" src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（四）：博客写作/image-url" class="full-image" alt="alt" title="title"><meta itemprop="width" content="auto"><meta itemprop="height" content="auto"></span></code> ；</li><li>插入指定大小的图片：<code><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（四）：博客写作/path/to/image" class="[class names]" title="[width] [height] [title text [alt text]]"></code>；</li><li><p>更漂亮的引用方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% blockquote Author, Source %&#125;</span><br><span class="line">Content.</span><br><span class="line">&#123;% endblockquote %&#125;</span><br></pre></td></tr></table></figure></li><li><p>更好的代码块加入方法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% codeblock lang:python %&#125;</span><br><span class="line">print &quot;Hello World!&quot;</span><br><span class="line">&#123;% endcodeblock %&#125;</span><br></pre></td></tr></table></figure></li><li><p>插入 Gist：<code><script src="//gist.github.com/gist_id.js?file=[filename]"></script></code></p></li></ul><h1 id="5-设置字体大小和颜色"><a href="#5-设置字体大小和颜色" class="headerlink" title="5. 设置字体大小和颜色"></a>5. 设置字体大小和颜色</h1><p>如果想自定义字体大小以及颜色，可以直接在 Markdown 文档中使用 html 语法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;font size=4 &gt; 这里输入文字，自定义字体大小 &lt;/font&gt;</span><br><span class="line">&lt;font color=&quot;#FF0000&quot;&gt; 这里输入文字，自定义字体颜色&lt;/font&gt; </span><br><span class="line">&lt;span style=&quot;background-color: #ff6600;&quot;&gt;这里输入文字，自定义字体背景色&lt;/span&gt;</span><br><span class="line">&lt;font color=&quot;#000000&quot; size=4&gt;&lt;span style=&quot;background-color: #ADFF2F;&quot;&gt;这是综合起来的效果 &lt;/span&gt;&lt;/font&gt;</span><br><span class="line">&lt;font color=&quot;#FFFFFF&quot; size=4&gt;&lt;span style=&quot;background-color: #68228B;&quot;&gt;这是综合起来的效果2 &lt;/span&gt;&lt;/font&gt;</span><br></pre></td></tr></table></figure></p><p>其中#FF0000为RGB颜色代码，读者可去<a href="http://www.114la.com/other/rgb.htm" target="_blank" rel="noopener">RGB颜色查询对照表网站</a>查找自己喜欢的颜色。<br>若想在RGB颜色值与十六进制颜色码之间相互转化，可查看<a href="https://www.sioe.cn/yingyong/yanse-rgb-16/" target="_blank" rel="noopener">该网站</a>。</p><h1 id="6-首行缩进"><a href="#6-首行缩进" class="headerlink" title="6. 首行缩进"></a>6. 首行缩进</h1><p>在需要缩进行的开头处，先输入下面的代码，然后紧跟着输入文本即可。分号也不要漏掉。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">半方大的空白`&amp;ensp;`或`&amp;#8194`;</span><br><span class="line">全方大的空白`&amp;emsp;`或`&amp;#8195`;</span><br><span class="line">不断行的空白格`&amp;nbsp;`或`&amp;#160`;</span><br></pre></td></tr></table></figure></p><h1 id="7-设置博文中的链接为蓝色"><a href="#7-设置博文中的链接为蓝色" class="headerlink" title="7. 设置博文中的链接为蓝色"></a>7. 设置博文中的链接为蓝色</h1><p>由于 NexT 渲染出来的博文的网络链接都是白色的，可以改为蓝色。可以去 <code>\themes\next\source\css\_common\components\post\post.styl</code>，添加字段：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">.post-body p a&#123;</span><br><span class="line">    color: #0593d3;</span><br><span class="line">    border-bottom: none;</span><br><span class="line">    &amp;:hover &#123;</span><br><span class="line">      color: #0477ab;</span><br><span class="line">      text-decoration: underline;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure></p>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E5%9B%9B%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E5%86%99%E4%BD%9C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Windows 系统使用 Hexo 搭建博客记录（三）：博客配置和主题配置</title>
      <link>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</link>
      <guid>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</guid>
      <pubDate>Sat, 30 Mar 2019 11:20:57 GMT</pubDate>
      <description>
      
        &lt;p&gt;这是 Windows 系统使用 Hexo 搭建博客系列文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置本地环境；&lt;/li&gt;
&lt;li&gt;连接网络；&lt;/li&gt;
&lt;li&gt;博客配置和主题配置；&lt;/li&gt;
&lt;li&gt;博客写作；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是第三篇：博客配置和主题配置。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>这是 Windows 系统使用 Hexo 搭建博客系列文章：</p><ol><li>配置本地环境；</li><li>连接网络；</li><li>博客配置和主题配置；</li><li>博客写作；</li></ol><p>这是第三篇：博客配置和主题配置。</p><a id="more"></a><h1 id="1-博客配置和写作"><a href="#1-博客配置和写作" class="headerlink" title="1. 博客配置和写作"></a>1. 博客配置和写作</h1><h2 id="1-1-修改博客名称"><a href="#1-1-修改博客名称" class="headerlink" title="1.1 修改博客名称"></a>1.1 修改博客名称</h2><p>在 <code>/blog/_config.yml</code> 中的 <code>#Site</code> 修改：</p><ul><li>title</li><li>subtitle</li><li>description</li><li>language: zh-CN</li><li>timezone</li></ul><p>注意：若使用 NexT 主题，language 的简体中文必须设置为 <code>zh-CN</code></p><h2 id="1-2-生成-Category-Tags-About-页面"><a href="#1-2-生成-Category-Tags-About-页面" class="headerlink" title="1.2 生成 Category, Tags, About 页面"></a>1.2 生成 Category, Tags, About 页面</h2><ul><li>输入：<figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new page tags</span><br><span class="line">hexo new page categories</span><br><span class="line">hexo new page about</span><br></pre></td></tr></table></figure></li></ul><p>然后在 source 文件夹下会出现 tags, categories, about 文件夹，分别在里面的 index 文件加入语句：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">type: &quot;tags&quot;</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">type: &quot;about&quot;</span><br></pre></td></tr></table></figure></p><p>在 about 文件夹里面的 index.md 写个人的简介。</p><h2 id="1-3-添加搜索和-RSS-Feed"><a href="#1-3-添加搜索和-RSS-Feed" class="headerlink" title="1.3 添加搜索和 RSS Feed"></a>1.3 添加搜索和 RSS Feed</h2><p>注意，必须首先安装了 Hexo 的 feed 和 searchdb 插件，在 <code>/blog/_config.yml</code> 中添加如下代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br><span class="line"></span><br><span class="line">feed:</span><br><span class="line">  type: rss2</span><br><span class="line">  path: rss2.xml</span><br><span class="line">  limit: 10</span><br><span class="line">  hub:</span><br><span class="line">  content: &apos;true&apos;</span><br></pre></td></tr></table></figure></p><p>注意，search 还必须在 NexT 主题配置文件中把 <code>local_search</code> 设为 <code>true</code>.</p><h2 id="1-4-为项目主页添加-README-文件"><a href="#1-4-为项目主页添加-README-文件" class="headerlink" title="1.4 为项目主页添加 README 文件"></a>1.4 为项目主页添加 README 文件</h2><p>每次 Hexo 重新部署的时候项目主页的 README 文件都会被删除。因此用如下方法：</p><ol><li>在 <code>\blog\source</code> 文件夹内新建文件 <code>README.mdown</code>；</li><li>在这个 <code>README.mdown</code> 里面写 readme 的内容。</li></ol><h1 id="2-NexT-主题配置"><a href="#2-NexT-主题配置" class="headerlink" title="2. NexT 主题配置"></a>2. NexT 主题配置</h1><p>主要使用和参考了：</p><ul><li><a href="https://theme-next.org/docs/" target="_blank" rel="noopener">NexT 文档</a></li><li><a href="https://github.com/theme-next/hexo-theme-next" target="_blank" rel="noopener">NexT Github</a></li><li><a href="https://zhuanlan.zhihu.com/p/33616481" target="_blank" rel="noopener">Hexo搭建的GitHub博客之优化大全</a></li></ul><h2 id="2-1-基础设置"><a href="#2-1-基础设置" class="headerlink" title="2.1 基础设置"></a>2.1 基础设置</h2><p>首先修改主题：在博客配置文件 <code>/blog/_config.yml</code> 里面修改主题为：<code>theme: next</code>；<br>接下来操作都在主题配置文件 <code>/blog/themes/next/_config.yml</code> 中进行。</p><ul><li>网页设置<ul><li>网站小图标（<code># Site Information Settings</code>）：把图标的 png 文件放在 <code>themes/next/source/images/</code> 文件夹里面，把文件夹的链接加到 <code>favicon:</code> 中即可。我只设置了 small, medium 两个；</li><li>设 <code>creative_commons:</code> 的 <code>post: true</code>，在文末添加版权声明；</li><li>网页底部 <code>footnote</code> 暂不作设置。</li></ul></li><li>设置导航栏（<code># Menu Settings</code>）：添加 about, tags 和 categories；</li><li>设置模板（ <code># Scheme Settings</code>）：可选择喜欢的样式，我采用了 <code>Gemini</code>；</li><li>设置侧边栏（<code># Sidebar Settings</code>），我的修改如下：<ul><li>设置社交账号链接（<code>social</code>）：设置了 Github，知乎，豆瓣和邮箱四个；</li><li>设置 <code>back2top</code> 中的值都为 true；</li><li>增加头像（<code>avatar</code>）：把头像放在 <code>themes/next/source/images/</code> 文件夹里面，把文件夹的链接加到 <code>url:</code> 中即可；</li><li>修改 <code>toc</code> 设置，把自动添加目录序号设为 <code>number: false</code>；</li></ul></li><li>设置文章（<code># Post Settings</code>）：可设置文后添加微信订阅、相似文章等，但现暂时不设置；</li><li>添加数学公式支持（<code># Math Equations Render Support</code>）<ol><li>设置 <code>math</code> 为 <code>enable: true</code>；</li><li>卸载原来的 renderer：<code>npm un hexo-renderer-marked --save</code>；</li><li>安装可以支持 mathjax 的 renderer：<code>npm install hexo-renderer-pandoc --save</code>；</li><li>每次写作，如果需要使用公式（mathjax）时，就在声明区加入声明：<code>mathjax: true</code></li></ol></li></ul><h2 id="2-2-高级设置"><a href="#2-2-高级设置" class="headerlink" title="2.2 高级设置"></a>2.2 高级设置</h2><ul><li>添加评论支持：<br>使用来必力评论系统（LiveRe），先注册。然后点击<code>安装</code>，选择免费版，填入网站链接和名称，获得代码，找到 <code>uid</code>。最后在主题配置文件中找到 <code>livere_uid:</code> 并加入即可；</li><li>添加阅读次数统计功能：<br>使用 Leecloud，用 Github 账号注册之后，创建新应用（自定应用名）→ 进入应用，创建 class，名字为 Counter → 设置，应用 key → 复制 App ID 和 App Key → 修改主题配置文件中的 <code>leancloud_visitors</code>。最后需要安装插件 <code>npm install hexo-leancloud-counter-security --save</code>；</li><li>添加顶部加载进度条：<br>进入 <code>\themes\next</code> 文件夹，输入：<code>git clone https://github.com/theme-next/theme-next-pace source/lib/pace</code> 下载插件。在主题配置文件中把 <code>pace</code> 设为 <code>true</code> 即可；</li><li>添加背景动态效果：<br>主题配置文件定位到 <code># Canvas-nest</code>，看情况是否需要。并且要安装插件；</li><li>修改文章底部的 # 号标签<br>修改模板 <code>/themes/next/layout/_macro/post.swig</code>，搜索 <code>rel=&quot;tag&quot;&gt;#</code>，将其中的 <code>#</code> 换成 <code>&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;</code></li></ul>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE%E5%92%8C%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Windows 系统使用 Hexo 搭建博客记录（二）：连接网络</title>
      <link>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/</link>
      <guid>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/</guid>
      <pubDate>Sat, 30 Mar 2019 11:06:21 GMT</pubDate>
      <description>
      
        &lt;p&gt;这是 Windows 系统使用 Hexo 搭建博客系列文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置本地环境；&lt;/li&gt;
&lt;li&gt;连接网络；&lt;/li&gt;
&lt;li&gt;博客配置和主题配置；&lt;/li&gt;
&lt;li&gt;博客写作；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是第二篇：连接网络。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>这是 Windows 系统使用 Hexo 搭建博客系列文章：</p><ol><li>配置本地环境；</li><li>连接网络；</li><li>博客配置和主题配置；</li><li>博客写作；</li></ol><p>这是第二篇：连接网络。</p><a id="more"></a><h1 id="1-使用-Github-Pages-并确定域名"><a href="#1-使用-Github-Pages-并确定域名" class="headerlink" title="1. 使用 Github Pages 并确定域名"></a>1. 使用 Github Pages 并确定域名</h1><p>在 Github 上新建一个项目（repository），新项目（Create a New Repository）必须填：<code>username.github.io</code>，才能生成 Github Pages。<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/new_repo.png" alt="new_repo"></p><h1 id="2-本地生成密钥"><a href="#2-本地生成密钥" class="headerlink" title="2. 本地生成密钥"></a>2. 本地生成密钥</h1><p>要把本地的博文通过 Github Pages 发布到网上，就必须使用密钥进行本地和网络的连接。此时，就要保证本地和 Github 的密钥是一致的。因此这一步就是在本地生成密钥，并在下一步将密钥粘贴到 Github 中。</p><ol><li><p>创建 ssh key<br>输入：<code>ssh-keygen -t rsa -C &quot;email&quot;</code>，然后一直回车即可（不输入密码 passphrase）。<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/generate_ssh_key.jpg" alt="generate_ssh_key"></p></li><li><p>复制 ssh key<br>输入：<code>clip &lt; ~/.ssh/id_rsa.pub</code> 即可。<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/clip_ssh_key.jpg" alt="clip_ssh_key"></p></li><li><p>粘贴到 Github - Settings - SSH and GPG keys 的 SSH 中，然后 <code>Nes SSH Key</code> 即可，完成后如下：<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/github_key.jpg" alt="github_key"></p></li></ol><h1 id="3-测试连接并修改博客配置"><a href="#3-测试连接并修改博客配置" class="headerlink" title="3. 测试连接并修改博客配置"></a>3. 测试连接并修改博客配置</h1><ol><li><p>测试连接是否成功<br>输入：<code>ssh -T git@github.com</code>，然后必须要输入 yes，然后继续即可。<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/check_connect.jpg" alt="check_connect"></p></li><li><p>设置用户名和密码</p><ul><li><code>git config --global user.name &quot;NAME&quot;</code></li><li><code>git config --global user.email &quot;MAIL&quot;</code></li></ul></li><li><p>修改 -config.yml 的内容<br>把 deploy 的内容修改成下面这样（前提是已经安装了）：<br><img src="/2019/03/30/Windows-系统使用-Hexo-搭建博客记录（二）：连接网络/set_deployment.jpg" alt="set_deployment"></p></li></ol><h1 id="4-发布博客"><a href="#4-发布博客" class="headerlink" title="4. 发布博客"></a>4. 发布博客</h1><p>输入：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>或者简单的：<code>hexo g -d</code> 即可。完成后在浏览器输入网址：<a href="http://azure-rong.github.io/">http://azure-rong.github.io/</a> 查看结果。</p>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/30/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E8%BF%9E%E6%8E%A5%E7%BD%91%E7%BB%9C/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Windows 系统使用 Hexo 搭建博客记录（一）：配置本地环境</title>
      <link>http://azure-rong.github.io/2019/03/29/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83/</link>
      <guid>http://azure-rong.github.io/2019/03/29/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83/</guid>
      <pubDate>Fri, 29 Mar 2019 15:48:13 GMT</pubDate>
      <description>
      
        &lt;p&gt;这是 Windows 系统使用 Hexo 搭建博客系列文章：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置本地环境；&lt;/li&gt;
&lt;li&gt;连接网络；&lt;/li&gt;
&lt;li&gt;博客配置和主题配置；&lt;/li&gt;
&lt;li&gt;博客写作；&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这是第一篇：配置本地环境。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p>这是 Windows 系统使用 Hexo 搭建博客系列文章：</p><ol><li>配置本地环境；</li><li>连接网络；</li><li>博客配置和主题配置；</li><li>博客写作；</li></ol><p>这是第一篇：配置本地环境。</p><a id="more"></a><h1 id="1-下载-Node-js-和-Git（Cmder）"><a href="#1-下载-Node-js-和-Git（Cmder）" class="headerlink" title="1. 下载 Node.js 和 Git（Cmder）"></a>1. 下载 Node.js 和 Git（Cmder）</h1><p>使用 Hexo 前必须有 Node.js 和 Git 的支持。<br>原因是：配置本地环境就是要有搭建网页（前端）工具：Node.js，以便之后使用专门的博客工具（Hexo，Jekyll 等）来进行网页生成。而又由于 Windows 对 Node.js 的支持并不好，因此还需要下载 Git 来进行操作。<br>而又因为 Windows 下对 Git 的支持也不好，因此需要下载 msysgit。正好 Windows 下的原生 Cmd 并不好用，因此可以下载完整版的 <a href="https://cmder.net/" target="_blank" rel="noopener">Cmder</a> <sup><a href="#fn_1" id="reffn_1">1</a></sup>，里面自带了 msysgit，并且界面非常漂亮。因此此后所有的博客相关操作，包括 Git 的相关操作，都无需再使用很丑的 git-bash，而直接用 Cmder 即可。</p><h2 id="1-1-下载-Cmder-完整版"><a href="#1-1-下载-Cmder-完整版" class="headerlink" title="1.1 下载 Cmder 完整版"></a>1.1 下载 Cmder 完整版</h2><p><img src="/2019/03/29/Windows-系统使用-Hexo-搭建博客记录（一）：配置本地环境/download_Cmder_full_version.jpg" alt="download_Cmder_full_version"></p><h2 id="1-2-下载-Node-js"><a href="#1-2-下载-Node-js" class="headerlink" title="1.2 下载 Node.js"></a>1.2 下载 Node.js</h2><ol><li>下载 Node.js 的 <a href="https://nodejs.org/zh-cn/download/" target="_blank" rel="noopener">Windows 安装包</a>。</li><li>测试 Node.js 是否成功安装<br>在 Cmder 中输入命令：<code>npm --version</code>，若正常安装即可显示版本信息。</li></ol><h1 id="2-使用和配置-Hexo"><a href="#2-使用和配置-Hexo" class="headerlink" title="2. 使用和配置 Hexo"></a>2. 使用和配置 Hexo</h1><ol><li>Hexo <sup><a href="#fn_2" id="reffn_2">2</a></sup> 事实上是 Node.js 的一个工具，因此安装 Hexo 是全局安装的；</li><li>然后要初始化 Hexo，那初始化就是需要指定文件夹的，那这个文件夹就是我们的博客文件夹；</li><li>初始化之后，在文件夹中就会有 Hexo 的相关配置文件；</li><li>下一步就是要下载 Hexo 的相关插件，来丰富博客的功能；</li></ol><h2 id="2-1-安装-Hexo"><a href="#2-1-安装-Hexo" class="headerlink" title="2.1 安装 Hexo"></a>2.1 安装 Hexo</h2><ol><li>直接在根目录下即可安装 Hexo（因此 Hexo 事实上是全局的），输入命令：<code>npm install -g hexo-cli</code></li><li>安装之后使用 <code>hexo version</code> 进行检查，若正常输出则安装成功。</li></ol><h2 id="2-2-使用-Hexo-建立网站"><a href="#2-2-使用-Hexo-建立网站" class="headerlink" title="2.2 使用 Hexo 建立网站"></a>2.2 使用 Hexo 建立网站</h2><ol><li>去到博客所在的文件夹，输入：<code>hexo init blog_directory_path</code><br>显示 <code>INFO Start blogging with Hexo!</code> 即表示初始化成功。<br>之后在博客文件夹中，会有如下文件/文件夹：<br><img src="/2019/03/29/Windows-系统使用-Hexo-搭建博客记录（一）：配置本地环境/init_hexo_file_tree.jpg" alt="init_hexo_file_tree"><ul><li><code>_config.yml</code>：网站的配置信息，如网站名等；</li><li><code>package.json</code>：网站的插件信息，以下这些插件是默认安装的；<br><img src="/2019/03/29/Windows-系统使用-Hexo-搭建博客记录（一）：配置本地环境/hexo_package_json.jpg" alt="hexo_package_json"></li><li><code>scaffolds</code>：存储了文档模板的文件夹，在生成博文时会根据模板默认填充部分信息如标题、日期、标签等，可定制化；</li><li><code>source</code>：存储博文的文件夹，博文存储在 <code>_post</code> 文件夹中，在网站生成（部署）的时候，<code>_post</code> 文件夹里面的博文会被放到一个新建的 <code>public</code> 文件夹中；</li><li><code>themes</code>：存储主题文件夹，默认主题是 <code>lanpscape</code>。注意，主题文件夹中的 <code>_config.yml</code> 和 <code>package.json</code> 是对主题进行修改配置的文件；</li></ul></li><li>进入博客文件夹，输入：<code>npm install</code>，完成最后的初始化操作。</li></ol><h2 id="2-3-安装-Hexo-插件"><a href="#2-3-安装-Hexo-插件" class="headerlink" title="2.3 安装 Hexo 插件"></a>2.3 安装 Hexo 插件</h2><ul><li>安装 git 上传插件：<code>npm install hexo-deployer-git --save</code></li><li>安装搜索插件：<code>npm install hexo-generator-searchdb --save</code></li><li>安装 RSS 插件：<code>npm install hexo-generator-feed --save</code></li></ul><h1 id="3-生成静态网页进行检测"><a href="#3-生成静态网页进行检测" class="headerlink" title="3. 生成静态网页进行检测"></a>3. 生成静态网页进行检测</h1><p>输入以下三个语句即可：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo new test_page # 在 _post 文件夹中新建一个 md 文件叫 test_page</span><br><span class="line">hexo generate # 把博文的网页生成出来</span><br><span class="line">hexo server # 生成静态网页</span><br></pre></td></tr></table></figure></p><p><img src="/2019/03/29/Windows-系统使用-Hexo-搭建博客记录（一）：配置本地环境/hexo_server_test.jpg" alt="hexo_server_test"></p><h1 id="4-Hexo-升级"><a href="#4-Hexo-升级" class="headerlink" title="4. Hexo 升级"></a>4. Hexo 升级</h1><p><code>很可能会出问题，慎用！</code><br>命令：<code>npm update hexo -g</code></p><p>脚注：</p><blockquote id="fn_1"><sup>1</sup>. <a href="https://zhuanlan.zhihu.com/p/28400466" target="_blank" rel="noopener">Windows上的程序员神器——Cmder</a><a href="#reffn_1" title="Jump back to footnote [1] in the text."> &#8617;</a></blockquote><blockquote id="fn_2"><sup>2</sup>. <a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">Hexo 文档</a><a href="#reffn_2" title="Jump back to footnote [2] in the text."> &#8617;</a></blockquote>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/29/Windows-%E7%B3%BB%E7%BB%9F%E4%BD%BF%E7%94%A8-Hexo-%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E8%AE%B0%E5%BD%95%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E9%85%8D%E7%BD%AE%E6%9C%AC%E5%9C%B0%E7%8E%AF%E5%A2%83/#disqus_thread</comments>
    </item>
    
    <item>
      <title>思考的感性与理性</title>
      <link>http://azure-rong.github.io/2019/03/29/%E6%80%9D%E8%80%83%E7%9A%84%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7/</link>
      <guid>http://azure-rong.github.io/2019/03/29/%E6%80%9D%E8%80%83%E7%9A%84%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7/</guid>
      <pubDate>Fri, 29 Mar 2019 12:49:10 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/2019/03/29/思考的感性与理性/greg-rakozy-38802-unsplash.jpg&quot; alt=&quot;meta thinking&quot;&gt;&lt;/p&gt;
&lt;p&gt;这段时间从刘未鹏老师的《暗时间》、采铜老师的《精进》、以及波西格的《禅与摩托车维修艺术》里面，吸收了一些内容。非常的有趣。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/2019/03/29/思考的感性与理性/greg-rakozy-38802-unsplash.jpg" alt="meta thinking"></p><p>这段时间从刘未鹏老师的《暗时间》、采铜老师的《精进》、以及波西格的《禅与摩托车维修艺术》里面，吸收了一些内容。非常的有趣。</p><a id="more"></a><p><a href="https://book.douban.com/subject/6709809/" target="_blank" rel="noopener">《暗时间》</a>的美妙之处是元思考，也就是思考人是怎么思考的。听起来很绕口。其实就是刘未鹏老师对人类的记忆、思考过程等心理学内容，以及人类是如何解决问题的。我印象最深的是几个点，</p><ul><li>一个是时刻装着要思考的问题，然后等它一直酝酿，突然之间问题可能就会豁然开朗。这个就是所谓的“暗时间”。你的潜意识非常强大而且一刻不停，在你睡觉吃饭洗澡的时候，如果你的大脑里面装着一个问题，你的潜意识就会帮你一直思考，在灵感忽至的时候，问题就得到了解决并被送往显性的意识里面。然后你就可以像阿基米德解决皇冠体积问题的时候大喊一声：Eureka!</li><li>一个是遇见25万年前的自己。人的欲望都倾向于获得食物和热量，要去和多个异性交配以保存基因。而在现代社会，人其实已经不需要这样保命了。人的理性思考就是这几十万年的进化产物，然而却经常败给原始的欲望，败给25万年前的自己。所以，要学会控制，学着进化。</li><li>最后一个是关于解题。解题虽然有很多套路，但还是要多点真诚（大雾）。其实关键是在于，一些问题如果想不到关键点，那就是想不到。好问题就会有良好的结构，会引导你到这个关键点。但要到达这个关键点，还是得靠第一点提到的，潜意识。这就是神奇的地方。人的理性思考，最后竟然要靠灵感！</li></ul><p>这在波西格的<a href="https://book.douban.com/subject/6811366/" target="_blank" rel="noopener">《禅与摩托车维修艺术》</a>里面也有阐述。里面引用了爱因斯坦的名言：</p><blockquote><p>人类用最适合自己的方式，描绘了一幅最简洁、最容易了解的世界图像。然后试着用经验取代某种层次的世界，然后征服它……他创造了这个宇宙和他感情生活的支柱，这样才能由中找到安宁，而这安宁是无法从个人狭窄的经验当中获得的……最崇高的工作……就是要建立这些宇宙基本的法则，这些法则经过演绎就能创造出现今的世界。而要通往这些法则没有合乎逻辑的路；只有靠着直觉和对经验的体谅才能进入其中…… </p></blockquote><p>波西格惊呼：“直觉？体谅？用来形容科学的源头是很奇怪的字眼。”</p><p>没错，我们理性构建的大厦，它的地基，竟然是直觉，和体谅！ </p><p>采铜老师的<a href="https://book.douban.com/subject/26761696/" target="_blank" rel="noopener">《精进》</a>，也是元思考的好书。我印象最深的是两个。</p><ul><li>一个是要多写知识半衰期比较长的东西。这才是保持思考不钝化的关键因素。</li><li>一个是要先完成思考的最关键部分。采铜老师把知识比喻为三明治，中间夹着的那些肉和菜是最重要的，而外面的两层面包非常容易就能准备好。所以我们思考就像做三明治一样，先把最关键的肉和菜准备好，把这部分解决之后，剩下的就是琐碎工作，却能非常愉快的完成。</li></ul><p>最后是我逛知乎时看到的很喜欢的一句话，是评述那些看了知乎的东西就有知识优越感的人，来自Lawrence Li：</p><blockquote><p>關鍵在於妳生產了什麼，而不是消費了什麼。</p></blockquote><p>所以，无论书评做得如何，都只是消费而已。真正融入内化到自己的思考里面，改变自己的思维方式，最后体现在写作和言谈之中，才是产出。</p><p>多产出，少消费。与诸君共勉。</p>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/29/%E6%80%9D%E8%80%83%E7%9A%84%E6%84%9F%E6%80%A7%E4%B8%8E%E7%90%86%E6%80%A7/#disqus_thread</comments>
    </item>
    
    <item>
      <title>关于这个博客</title>
      <link>http://azure-rong.github.io/2019/03/29/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/</link>
      <guid>http://azure-rong.github.io/2019/03/29/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/</guid>
      <pubDate>Fri, 29 Mar 2019 08:46:36 GMT</pubDate>
      <description>
      
        &lt;p&gt;&lt;img src=&quot;/2019/03/29/关于这个博客/free.jpg&quot; alt=&quot;free&quot;&gt;&lt;/p&gt;
&lt;p&gt;拥有一个自己博客的念头一开始并不十分强烈，但后来却越发明晰。有很多想法，学习的体会，观察的结果，都需要一个专有的地方放置。另一方面，也是受到刘未鹏老师在&lt;a href=&quot;https://book.douban.com/subject/6709809/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;《暗时间》&lt;/a&gt;里面对博客讲解的启发。&lt;/p&gt;
      
      </description>
      
      <content:encoded><![CDATA[<p><img src="/2019/03/29/关于这个博客/free.jpg" alt="free"></p><p>拥有一个自己博客的念头一开始并不十分强烈，但后来却越发明晰。有很多想法，学习的体会，观察的结果，都需要一个专有的地方放置。另一方面，也是受到刘未鹏老师在<a href="https://book.douban.com/subject/6709809/" target="_blank" rel="noopener">《暗时间》</a>里面对博客讲解的启发。</p><a id="more"></a><p>很多时候，问题并不是想清楚的，而是写着写着想清楚的。更多时候是写下来之后改着改着改清楚的。</p><p>《暗时间》里面展示了思考是如何成型为一篇文章的。事实上，这个做研究非常相似：心中有个想法，找资料，汇总资料并分析，持续深入的思考，重复以上三步，最后整合成有逻辑的文章。</p><p>作为一个博士生，应该贯彻上述思路，一步步写出好的文章。这个博客会聊到关于研究的点滴内容，会有对电子商务世界的观察和思考，在方法会有对数据科学的结构化阐述，在技术上会整理出各种数据分析技术的简要理解和应用。</p><p>对这个博客的期望，是整合自己的知识结构和技能树。把已有的模糊的思考整理成清晰的逻辑结构，然后查漏补缺，把不完整不完善的知识区域补充完。<br>对总体背景和环境，希望在博客里面可以有总结和进一步的思考，集思广益海纳百川。<br>最重要的，还是坚持学习，坚持思考，坚持记录，坚持完善。</p><p>学无止境。</p>]]></content:encoded>
      
      <comments>http://azure-rong.github.io/2019/03/29/%E5%85%B3%E4%BA%8E%E8%BF%99%E4%B8%AA%E5%8D%9A%E5%AE%A2/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
